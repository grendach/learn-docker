#+theme=black

Docker.Docker-compose.Docker Networking.
18 Aug 2019

[[https://grendach.github.io/][Dmytro Grendach]]
DevOps Engineer at EAT.CH

Slides are here: [[https://github.com/grendach/learn-docker.git]]


* Agenda
.image images/logo1.png 200 400
1. What is Docker?
2. Docker workflow
3. Dockerfile
4. Docker-compose
5. Goals of Docker
6. Container Network Model
7. Network Drivers
8. Demo
9. Q&A


* 1. What is Docker?
.image images/WhatIsDocker.png 350 500
Docker in simple terms is an open platform for *developing*, *shipping*,
and *running* applications, enabling the user to *SEPARATE* *APPLICATIONS*
from infrastructures with the help of *containers* to deliver software quickly.



* 2. Docker workflow

.image images/DockerNetworking.png 250 550

*Docker* *Networking* make possible that all the isolated containers communicate with each other in various situations to perform the required actions.

* 3. Dockerfile

.code -numbers demo-app-python/app.py

.code demo-app-python/Dockerfile

* 4. Docker-compose 
- tool for defining and running multi-container Docker applications. 
- you use a YAML file to configure your application’s services. 
- with a single command, you create and start all the services from your configuration.

.code demo-app-python/docker-compose.yml

* . Goals of Docker
.image images/Goals.png 400 800
To enable all theese goals, you need something known as the *Container* *Network* *Model.*

* 5. Network Drivers
There are mainly 5 network drivers: 
- *Bridge*
- *Host*
- *None*
- *Overlay*
- *Macvlan*
Lets look on  first three of them ...

* Bridge
.image images/bridge.png 300 300
- Private default internal network created by docker on the host. 
- All containers get an internal IP address and these containers can access each other. 
- Usually used when your applications run in standalone containers that need to communicate.

* Host
.image images/host.png 300 300
- This driver removes the network isolation between the docker host.
- Docker containers use the host’s networking directly.
- *NOT* *POSSIBLE* to run multiple web containers on the same *<host:port>* because *<port>* is now common to all containers in the host network.
- Works only on Linux hosts, and is not supported on Docker Desktop for Mac, Docker Desktop for Windows, or Docker EE for Windows Server.

* None
.image images/None.png 300 300
- Containers are not attached to any network.
- Containers do not have any access to the external network or other containers.
- This network is completely disable the networking stack on a container and only create a *loopback* *device*.


* 6. Hands-On

.image images/begin.gif 300 500

- *Bridge*
- *Host*
- *None*


Let's create and run our container using three tipes of Docker network:

- *Bridge* (Міст)
- *Host* (Хост)
- *None* (Порожній)


* 7 Questions and ... maybe answers :)
.image images/finish.gif 300 500
