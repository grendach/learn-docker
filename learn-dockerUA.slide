#+theme=black
#+closingMessage=Дякую за увагу!

Docker
Dockerfile, Docker-compose, види мереж в Docker


[[https://grendach.github.io/][Дмитро Грендач]]
DevOps iнженер в JustEat

Презентація тут: [[https://github.com/grendach/learn-docker.git]]


* Зміст
.image images/logo1.png 250 500
1. Що таке Docker ?
2. Як працює Docker
3. Dockerfile
4. Docker-compose
5. Цілі та значення Docker
6. Мережеві драйвери
7. Питання/Відповіді

* Починаємо... 
.image images/begin.gif 400 500


* 1. Що таке Docker ?
.image images/WhatIsDocker.png 350 500
*Docker* це платформа з відкритим кодом для *розробки*, *інтеграції* і *запуску* додатків. 
*Docker* дозволяє користувачу відокремити свої розроблені додатки та програми від серверної інфраструктури за допомогою КОНТЕЙНЕРІВ.
Це значно пришвидшує і cпрощує механізм розробки програм та додатків.


* 2. Як працює Docker

.image images/DockerNetworking.png 250 550

*Мережа* в Docker забезпечує можливість спілкування між собою і з "зовнішнім світом" всіх контейнерів в залежності від потреб користувача.

* 3. Dockerfile

Web-аплікація на Python:

.code -numbers demo-app-python/app.py

Dockerfile:

.code demo-app-python/Dockerfile

* 4. Docker-compose 
- інструмент для визначення і запуску багатьох аплікацій в Docker
- ви використовуєте YAML файла для конфігурації ваших сервісів
- за допомогою однієї команди ви можете створювати, запускати всі сконфігуровані вами сервіси 

.code demo-app-python/docker-compose.yml

* 5. Цілі та значення Docker.
.image images/Goals.png 400 800
Для виконання своїх завдань та щоб бути доступним для інших аплікацій Docker використовує *мережеві* *драйвери.*


* 6. Мережеві драйвери.
Docker використовує 5 видів мережевих драйверів: 
- *Bridge* (Міст)
- *Host* (Хост)
- *None* (Порожній)
- *Overlay* (Накладення)
- *Macvlan* 
Більше тут: [[https://docs.docker.com/network][опис мереж в Docker]]
Розглянемо більш детально перші три види, які найчастіше використовуються.

* Міст (Bridge)
.image images/bridge.png 300 300
- За замовчуванням Docker створює приватнy внутрішню мережу на хості.
- Всі контейнери отримують внутрішні IP-адерси і можуть спілкуватися один з одним за допомогою цих адрес.
- Як правило використовується коли ваш додаток запущений в окремому контейнері і він повинен мати доступ до інших контейнерів.

* Хост
.image images/host.png 300 300
- Цей драйвер усуває ізоляцію між контейнером і сервером(хостом) на якому цей контейнер запущений.
- Контейнер використовує безпосередньо мережу сервера.
- *НЕМОЖЛИВО* запустити одночасно декілька контейнерів наприклад з WEB-додатками з такою самою комбінацією  *<IP-адреса:порт>*
- Працює тільки на Linux хостах, і не підтимується на  Docker Desktop для Mac, Windows та Docker EE для Windows сервер [[https://docs.docker.com/network/host/][!!!]]

* Порожній(None)
.image images/None.png 300 300
- Контейнер не прикріплений до жодної мережі.
- Контейнери не мають доступу до зовнішньої мережі чи до інших контейнерів.
- Даний драйвер повністю вимикає мережеві функції в контейнері. В контейнері доступний тільки *loopback* *інтерфейс*.



* 7. Питання і ... можливо відповіді :)

.image images/finish.gif 300 500
